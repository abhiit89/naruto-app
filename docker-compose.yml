version: '3.1'
services:
  mongo:
    image: mongo
    restart: always
    networks:
      - naruto
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - 'mongo:/data/db'
  redis:
    image: 'redis:7.0-alpine'
    restart: always
    networks:
      - naruto
    ports:
      - '6379:6379'
    command: >-
      redis-server --save 20 1 --loglevel warning --requirepass
      eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - 'cache:/data'
  memcached:
    image: 'bitnami/memcached:latest'
    networks:
      - naruto
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_MAX_CONNECTIONS=2000
      - MEMCACHED_THREADS=4
      - MEMCACHED_MAX_ITEM_SIZE=8388608
      - MEMCACHED_USERNAME=cache_user
      - MEMCACHED_PASSWORD=cache_password
    ports:
      - '11211:11211'
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.0.1'
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: 'confluentinc/cp-kafka:7.0.1'
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
volumes:
  cache:
    driver: local
  mongo:
    driver: local
networks:
  naruto:
    driver: bridge
